const express = require('express');
const path = require('path');
const fs = require('fs');
const cors = require('cors');
const BotRuntime = require('./utils/BotRuntime');
const { setBotRuntime: setRuntimeForRoutes } = require('./routes/runtime');
const { setBotRuntime: setRuntimeForWebhooks } = require('./routes/webhooks');

const app = express();
const PORT = process.env.PORT || 3000;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BotRuntime
const botRuntime = new BotRuntime();
setRuntimeForRoutes(botRuntime);
setRuntimeForWebhooks(botRuntime);

// Middleware
app.use(cors());
app.use(express.json({ limit: '50mb' }));
app.use(express.urlencoded({ extended: true, limit: '50mb' }));

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static(path.join(__dirname, 'public')));
app.use('/frontend', express.static(path.join(__dirname, 'frontend')));

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
const ensureDirectories = () => {
  const dirs = [
    'data',
    'data/bots',
    'data/users',
    'data/sessions',
    'data/visual_schemas',
    'data/visual_schemas/versions',
    'data/templates',
    'data/backups',
    'data/logs'
  ];
  
  dirs.forEach(dir => {
    const dirPath = path.join(__dirname, dir);
    if (!fs.existsSync(dirPath)) {
      fs.mkdirSync(dirPath, { recursive: true });
      console.log(`üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dir}`);
    }
  });
};

ensureDirectories();

// API Routes
app.use('/api/bots', require('./routes/bots'));
app.use('/api/users', require('./routes/users'));
app.use('/api/auth', require('./routes/auth'));
app.use('/api/templates', require('./routes/templates'));
app.use('/api/visual-schemas', require('./routes/visual-schemas'));
app.use('/api/platforms', require('./routes/platforms'));
app.use('/api/integrations', require('./routes/integrations'));
app.use('/api/deployment', require('./routes/deployment-no-auth'));
app.use('/api/runtime', require('./routes/runtime').router);

// Webhook routes
app.use('/webhook', require('./routes/webhooks').router);

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –¥–∞—à–±–æ—Ä–¥
app.get('/', (req, res) => {
  res.redirect('/dashboard');
});

// –î–∞—à–±–æ—Ä–¥
app.get('/dashboard', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'dashboard.html'));
});

// –†–µ–¥–∞–∫—Ç–æ—Ä –±–æ—Ç–æ–≤
app.get('/editor', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'editor.html'));
});

// –í–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä
app.get('/visual-editor', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'visual-editor.html'));
});

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
app.get('/settings', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'settings.html'));
});

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–æ–≤
app.get('/logs', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'logs.html'));
});

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
app.get('/deployment', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'deployment.html'));
});

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
app.get('/integrations', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'integrations.html'));
});

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º
app.get('/platforms', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'platforms.html'));
});

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ
app.get('/api/server/info', (req, res) => {
  res.json({
    success: true,
    data: {
      version: '1.1.0',
      uptime: process.uptime(),
      memory: process.memoryUsage(),
      platform: process.platform,
      nodeVersion: process.version,
      activeBots: botRuntime.getActiveBots().length,
      totalRequests: 0 // TODO: –¥–æ–±–∞–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ 404
app.use((req, res) => {
  res.status(404).json({
    success: false,
    error: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
  });
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', err);
  res.status(500).json({
    success: false,
    error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
  });
});

// Graceful shutdown
process.on('SIGINT', async () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
  
  try {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ—Ö –±–æ—Ç–æ–≤
    await botRuntime.stopAllBots();
    console.log('‚úÖ –í—Å–µ –±–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    server.close(() => {
      console.log('‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–∫—Ä—ã—Ç');
      process.exit(0);
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã:', error);
    process.exit(1);
  }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const server = app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üìä –î–∞—à–±–æ—Ä–¥: http://localhost:${PORT}/dashboard`);
  console.log(`‚úèÔ∏è –†–µ–¥–∞–∫—Ç–æ—Ä: http://localhost:${PORT}/editor`);
  console.log(`üé® –í–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä: http://localhost:${PORT}/visual-editor`);
  console.log(`‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏: http://localhost:${PORT}/settings`);
  console.log(`üìã –õ–æ–≥–∏: http://localhost:${PORT}/logs`);
  console.log(`üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ: http://localhost:${PORT}/deployment`);
  console.log(`üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: http://localhost:${PORT}/integrations`);
  console.log(`üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã: http://localhost:${PORT}/platforms`);
  
  // –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–æ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
  botRuntime.autoLoadBots().then(() => {
    console.log('‚úÖ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  }).catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏ –±–æ—Ç–æ–≤:', error);
  });
});

module.exports = app;